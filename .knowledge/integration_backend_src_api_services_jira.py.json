{"is_source_file": true, "format": "Python", "description": "This file defines a service class `JiraService` for handling JIRA operations such as creating, fetching, updating, deleting, and searching issues via the Jira API. It includes methods for interacting with the Jira REST API and manages an asynchronous HTTP client.", "external_files": ["../models/jira"], "external_methods": [], "published": ["jira_service"], "classes": [{"name": "JiraService", "description": "A service class encapsulating methods to interact with JIRA API, managing issues and connection details."}], "methods": [{"name": "AsyncClient _get_client(self, access_token: str)", "description": "Get or create an HTTP async client with authentication headers.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse create_issue( self, access_token: str, issue_data: JiraIssueCreate )", "description": "Create a new Jira issue and retrieve full issue details.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse get_issue( self, access_token: str, issue_key: str )", "description": "Retrieve a Jira issue by its key.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse update_issue( self, access_token: str, issue_key: str, update_data: JiraIssueUpdate )", "description": "Update fields of an existing Jira issue.", "scope": "JiraService", "scopeKind": "class"}, {"name": "None delete_issue( self, access_token: str, issue_key: str )", "description": "Delete a Jira issue by key.", "scope": "JiraService", "scopeKind": "class"}, {"name": "List[JiraIssueResponse] search_issues( self, access_token: str, jql: str, max_results: int = 50 )", "description": "Search Jira issues using JQL query.", "scope": "JiraService", "scopeKind": "class"}, {"name": "__init__(self, base_url: str = \"https://api.atlassian.com/ex/jira/\")", "scope": "JiraService", "scopeKind": "class", "description": "unavailable"}], "calls": ["await self._get_client(access_token)", "client.post", "client.get", "client.put", "client.delete", "client.post"], "search-terms": ["JiraService", "create_issue", "get_issue", "update_issue", "delete_issue", "search_issues", "JiraIssueCreate", "JiraIssueUpdate", "JiraIssueResponse", "asyncClient"], "state": 2, "file_id": 12, "knowledge_revision": 35, "git_revision": "cce293f87f0a969c914a0d69fa8f8087e2585e14", "revision_history": [{"27": ""}, {"35": "cce293f87f0a969c914a0d69fa8f8087e2585e14"}], "ctags": [{"_type": "tag", "name": "JiraService", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^class JiraService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    def __init__(self, base_url: str = \"https:\\/\\/api.atlassian.com\\/ex\\/jira\\/\"):$/", "language": "Python", "kind": "member", "signature": "(self, base_url: str = \"https://api.atlassian.com/ex/jira/\")", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_client", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def _get_client(self, access_token: str) -> AsyncClient:$/", "language": "Python", "typeref": "typename:AsyncClient", "kind": "member", "signature": "(self, access_token: str)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def create_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_data: JiraIssueCreate )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def delete_issue($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, access_token: str, issue_key: str )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "get_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def get_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_key: str )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "jira_service", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^jira_service = JiraService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def search_issues($/", "language": "Python", "typeref": "typename:List[JiraIssueResponse]", "kind": "member", "signature": "( self, access_token: str, jql: str, max_results: int = 50 )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "update_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def update_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_key: str, update_data: JiraIssueUpdate )", "scope": "JiraService", "scopeKind": "class"}], "hash": "e33b159393f0eba07ec017850f96441f", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/services/jira.py", "fields": [{"name": "jira_service = JiraService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}