{"is_source_file": true, "format": "Python", "description": "This file defines a JIRA service class providing methods to create, retrieve, update, delete, and search JIRA issues. It handles API interaction, data transformation, and exposes external symbols for integration.", "external_files": ["../auth/oauth", "../models/jira"], "external_methods": ["jira_oauth", "OAuthToken"], "published": ["jira_service"], "classes": [{"name": "JiraService", "description": "Service class for handling JIRA operations including creating, retrieving, updating, deleting, and searching issues."}], "methods": [{"name": "__init__(self, base_url: str = \"https://api.atlassian.com/ex/jira/\")", "description": "Initializes the JiraService object with base URL and optional HTTP client.", "scope": "JiraService", "scopeKind": "class"}, {"name": "AsyncClient _get_client(self, access_token: str)", "description": "Manages the creation and retrieval of an HTTP client with proper authentication.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse create_issue( self, access_token: str, issue_data: JiraIssueCreate )", "description": "Creates a new JIRA issue based on provided data.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse get_issue( self, access_token: str, issue_key: str )", "description": "Fetches details of a specific JIRA issue by key.", "scope": "JiraService", "scopeKind": "class"}, {"name": "JiraIssueResponse update_issue( self, access_token: str, issue_key: str, update_data: JiraIssueUpdate )", "description": "Updates an existing JIRA issue with new data.", "scope": "JiraService", "scopeKind": "class"}, {"name": "None delete_issue( self, access_token: str, issue_key: str )", "description": "Deletes a specified JIRA issue.", "scope": "JiraService", "scopeKind": "class"}, {"name": "List[JiraIssueResponse] search_issues( self, access_token: str, jql: str, max_results: int = 50 )", "description": "Performs a search for JIRA issues based on a JQL query.", "scope": "JiraService", "scopeKind": "class"}], "calls": ["self._get_client", "client.post", "client.get", "client.put", "client.delete", "client.post"], "search-terms": ["JiraService", "create_issue", "get_issue", "update_issue", "delete_issue", "search_issues", "AsyncClient", "HTTPException", "JiraIssueCreate", "JiraIssueUpdate", "JiraIssueResponse"], "state": 2, "file_id": 12, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraService", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^class JiraService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    def __init__(self, base_url: str = \"https:\\/\\/api.atlassian.com\\/ex\\/jira\\/\"):$/", "language": "Python", "kind": "member", "signature": "(self, base_url: str = \"https://api.atlassian.com/ex/jira/\")", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_client", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def _get_client(self, access_token: str) -> AsyncClient:$/", "language": "Python", "typeref": "typename:AsyncClient", "kind": "member", "signature": "(self, access_token: str)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def create_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_data: JiraIssueCreate )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def delete_issue($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, access_token: str, issue_key: str )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "get_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def get_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_key: str )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "jira_service", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^jira_service = JiraService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def search_issues($/", "language": "Python", "typeref": "typename:List[JiraIssueResponse]", "kind": "member", "signature": "( self, access_token: str, jql: str, max_results: int = 50 )", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "update_issue", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/jira.py", "pattern": "/^    async def update_issue($/", "language": "Python", "typeref": "typename:JiraIssueResponse", "kind": "member", "signature": "( self, access_token: str, issue_key: str, update_data: JiraIssueUpdate )", "scope": "JiraService", "scopeKind": "class"}], "hash": "1066c80dec519a79bd3a3ef8ca710606", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/services/jira.py", "fields": [{"name": "jira_service = JiraService()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}