{"is_source_file": true, "format": "Python", "description": "This is a Python source file defining a UserService class that manages user creation, authentication, retrieval, update, and listing functionalities. It uses in-memory storage and password hashing for user security.", "external_files": ["../models/user.py"], "external_methods": [], "published": ["user_service"], "classes": [{"name": "UserService", "description": "A service class handling user-related operations such as creation, authentication, retrieval, updating, and listing users."}], "methods": [{"name": "str _hash_password(self, password: str)", "description": "Hashes a password using bcrypt.", "scope": "UserService", "scopeKind": "class"}, {"name": "bool _verify_password(self, plain_password: str, hashed_password: str)", "description": "Verifies a plain password against a hashed password.", "scope": "UserService", "scopeKind": "class"}, {"name": "UserResponse create_user(self, user_data: UserCreate)", "description": "Creates a new user given user data, raises HTTPException if username exists.", "scope": "UserService", "scopeKind": "class"}, {"name": "Optional[UserResponse] authenticate_user( self, username: str, password: str )", "description": "Authenticates a user by username and password, returns user info if successful.", "scope": "UserService", "scopeKind": "class"}, {"name": "UserResponse get_user_by_username(self, username: str)", "description": "Retrieves a user by username, raises HTTPException if not found.", "scope": "UserService", "scopeKind": "class"}, {"name": "UserResponse update_user( self, username: str, update_data: UserUpdate )", "description": "Updates user information for a given username, raising exception if user not found.", "scope": "UserService", "scopeKind": "class"}, {"name": "List[UserResponse] list_users(self)", "description": "Returns a list of all users.", "scope": "UserService", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "UserService", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._hash_password", "self._verify_password", "UserResponse(**user)", "user_data.dict", "update_data.dict", "self._users.get", "self._users.update"], "search-terms": ["UserService", "password hashing", "in-memory user storage", "create_user", "authenticate_user", "list_users"], "state": 2, "file_id": 18, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "UserService", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^class UserService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "_hash_password", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    def _hash_password(self, password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, password: str)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "_verify_password", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    def _verify_password(self, plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, plain_password: str, hashed_password: str)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    async def authenticate_user($/", "language": "Python", "typeref": "typename:Optional[UserResponse]", "kind": "member", "signature": "( self, username: str, password: str )", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    async def create_user(self, user_data: UserCreate) -> UserResponse:$/", "language": "Python", "typeref": "typename:UserResponse", "kind": "member", "signature": "(self, user_data: UserCreate)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    async def get_user_by_username(self, username: str) -> UserResponse:$/", "language": "Python", "typeref": "typename:UserResponse", "kind": "member", "signature": "(self, username: str)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    async def list_users(self) -> List[UserResponse]:$/", "language": "Python", "typeref": "typename:List[UserResponse]", "kind": "member", "signature": "(self)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_user", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^    async def update_user($/", "language": "Python", "typeref": "typename:UserResponse", "kind": "member", "signature": "( self, username: str, update_data: UserUpdate )", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "user_service", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146761/integration_backend/src/api/services/user.py", "pattern": "/^user_service = UserService()$/", "language": "Python", "kind": "variable"}], "hash": "25e32fc237d8816ebd78de5ab8a76b26", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/services/user.py", "fields": [{"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "user_service = UserService()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"45": ""}]}